import React, { useEffect, useState } from 'react';
import EmployeeCard from '../EmployeeCard/EmployeeCard.jsx';
import api from '../../utils/Api.jsx';

function Employees({ setPopupOpen, isPopupOpen }) {
  const [employees, setEmployees] = useState([]);

  function handlePopupOpen() {
    setPopupOpen(true);
  }

  useEffect(() => {
    api.getAllEmployees()
      .then((res) => setEmployees(res));
  }, [isPopupOpen]);

  return (
    <section className="employees">
      <div className="employee__buttons">
        <div className="employee__filter">
          <p className="employee__filter-title">
            Показывать
            {' '}
            <span className="employee__filter-title_highlighted">50</span>
            {' '}
            пол-ей
          </p>
          <button type="button" className="employee__filter-button">
            <svg className="employee__filter-icon" width="17" height="19" viewBox="0 0 17 19" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M5.67225 2.36049C5.40066 2.36049 5.14021 2.46808 4.94817 2.65961C4.75613 2.85114 4.64825 3.1109 4.64825 3.38176C4.64825 3.65262 4.75613 3.91239 4.94817 4.10391C5.14021 4.29544 5.40066 4.40304 5.67225 4.40304C5.94383 4.40304 6.20429 4.29544 6.39632 4.10391C6.58836 3.91239 6.69625 3.65262 6.69625 3.38176C6.69625 3.1109 6.58836 2.85114 6.39632 2.65961C6.20429 2.46808 5.94383 2.36049 5.67225 2.36049ZM2.77433 2.36049C2.98589 1.76249 3.37822 1.24467 3.89724 0.878398C4.41627 0.512123 5.03643 0.31543 5.67225 0.31543C6.30806 0.31543 6.92822 0.512123 7.44725 0.878398C7.96627 1.24467 8.35861 1.76249 8.57017 2.36049H15.9122C16.1838 2.36049 16.4443 2.46808 16.6363 2.65961C16.8284 2.85114 16.9362 3.1109 16.9362 3.38176C16.9362 3.65262 16.8284 3.91239 16.6363 4.10391C16.4443 4.29544 16.1838 4.40304 15.9122 4.40304H8.57017C8.35861 5.00103 7.96627 5.51885 7.44725 5.88513C6.92822 6.2514 6.30806 6.44809 5.67225 6.44809C5.03643 6.44809 4.41627 6.2514 3.89724 5.88513C3.37822 5.51885 2.98589 5.00103 2.77433 4.40304H1.57625C1.30466 4.40304 1.04421 4.29544 0.852169 4.10391C0.660132 3.91239 0.552246 3.65262 0.552246 3.38176C0.552246 3.1109 0.660132 2.85114 0.852169 2.65961C1.04421 2.46808 1.30466 2.36049 1.57625 2.36049H2.77433ZM11.8162 8.48815C11.5447 8.48815 11.2842 8.59574 11.0922 8.78727C10.9001 8.9788 10.7922 9.23856 10.7922 9.50942C10.7922 9.78028 10.9001 10.04 11.0922 10.2316C11.2842 10.4231 11.5447 10.5307 11.8162 10.5307C12.0878 10.5307 12.3483 10.4231 12.5403 10.2316C12.7324 10.04 12.8402 9.78028 12.8402 9.50942C12.8402 9.23856 12.7324 8.9788 12.5403 8.78727C12.3483 8.59574 12.0878 8.48815 11.8162 8.48815ZM8.91833 8.48815C9.12989 7.89015 9.52222 7.37233 10.0412 7.00606C10.5603 6.63978 11.1804 6.44309 11.8162 6.44309C12.4521 6.44309 13.0722 6.63978 13.5912 7.00606C14.1103 7.37233 14.5026 7.89015 14.7142 8.48815H15.9122C16.1838 8.48815 16.4443 8.59574 16.6363 8.78727C16.8284 8.9788 16.9362 9.23856 16.9362 9.50942C16.9362 9.78028 16.8284 10.04 16.6363 10.2316C16.4443 10.4231 16.1838 10.5307 15.9122 10.5307H14.7142C14.5026 11.1287 14.1103 11.6465 13.5912 12.0128C13.0722 12.3791 12.4521 12.5758 11.8162 12.5758C11.1804 12.5758 10.5603 12.3791 10.0412 12.0128C9.52222 11.6465 9.12989 11.1287 8.91833 10.5307H1.57625C1.30466 10.5307 1.04421 10.4231 0.852169 10.2316C0.660132 10.04 0.552246 9.78028 0.552246 9.50942C0.552246 9.23856 0.660132 8.9788 0.852169 8.78727C1.04421 8.59574 1.30466 8.48815 1.57625 8.48815H8.91833ZM5.67225 14.6158C5.40066 14.6158 5.14021 14.7234 4.94817 14.9149C4.75613 15.1065 4.64825 15.3662 4.64825 15.6371C4.64825 15.9079 4.75613 16.1677 4.94817 16.3592C5.14021 16.5508 5.40066 16.6584 5.67225 16.6584C5.94383 16.6584 6.20429 16.5508 6.39632 16.3592C6.58836 16.1677 6.69625 15.9079 6.69625 15.6371C6.69625 15.3662 6.58836 15.1065 6.39632 14.9149C6.20429 14.7234 5.94383 14.6158 5.67225 14.6158ZM2.77433 14.6158C2.98589 14.0178 3.37822 13.5 3.89724 13.1337C4.41627 12.7674 5.03643 12.5707 5.67225 12.5707C6.30806 12.5707 6.92822 12.7674 7.44725 13.1337C7.96627 13.5 8.35861 14.0178 8.57017 14.6158H15.9122C16.1838 14.6158 16.4443 14.7234 16.6363 14.9149C16.8284 15.1065 16.9362 15.3662 16.9362 15.6371C16.9362 15.9079 16.8284 16.1677 16.6363 16.3592C16.4443 16.5508 16.1838 16.6584 15.9122 16.6584H8.57017C8.35861 17.2563 7.96627 17.7742 7.44725 18.1404C6.92822 18.5067 6.30806 18.7034 5.67225 18.7034C5.03643 18.7034 4.41627 18.5067 3.89724 18.1404C3.37822 17.7742 2.98589 17.2563 2.77433 16.6584H1.57625C1.30466 16.6584 1.04421 16.5508 0.852169 16.3592C0.660132 16.1677 0.552246 15.9079 0.552246 15.6371C0.552246 15.3662 0.660132 15.1065 0.852169 14.9149C1.04421 14.7234 1.30466 14.6158 1.57625 14.6158H2.77433Z"
              />
            </svg>
            Фильтр
          </button>
        </div>
        <button type="button" className="employee__add-button" onClick={handlePopupOpen}>
          +Добавить
        </button>
      </div>
      <div className="employee__cards">
        {
          employees.map((employee) => <EmployeeCard key={employee.id} data={employee} />)
        }
      </div>
    </section>
  );
}

export default Employees;
